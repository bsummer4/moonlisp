# Get a primitive compile working, and stable.
TODO Using duplicate keys in a table should be a syntax error.
TODO Lua code generator doesn't output strings correctly in all cases.
TODO The Code Generation (CExp) stuff is starting to suck.
	Once we get everything working, this needs to be rewritten to
		cleanly handle all cases.

TODO The REPL chokes on parens in string literals.
TOOD Write parsing and syntax-handling for method-call syntax:: [o:m a]
TODO Implement ‘match’.
	TODO Implement single-variable let-forms in the IR.
	TODO First implement a simple switch statement on atomic values.
		Add support to the IR.
			Compile down to if-else chains for now.

TODO Implement ‘def’ :: (def x y) ... → (match y (x ...))
TODO Implement foreign-syntax and foreign-function.
TODO Write the standard library for Lua.
TODO Write the command line interface code.
TODO Write codegen and the standard library for Python and Javascript.
TODO Write more and better test cases.

# Add some important features.
Scheme (r5rs) style macros.
Implement some nice syntactic-sugar as a macro library.
Basic optimizations: inlining, proper tail calls
